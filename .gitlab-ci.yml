variables:
  # Product
  PRODUCT: pip-apply
  # Config
  BUILD_TYPE: MAVEN
  MAVEN_IMAGE: "maven:3-openjdk-17"
  MVN_OPTS: "-DLOG_LEVEL=INFO"
  MVN_CLI_OPTS: "--batch-mode"
  REPO_OWNER: "Team Goldcrest"
  REPO_PATTERN: "V3 CI"
  PIP_APPLY_MOCKS_NAME: pip-apply-mocks
  MOCK_IMAGE: "develop"
  SERVICE_NAME: "PIP Apply Application Manager"
  GITHUB_REPO_NAME: ms-application-manager
  CI_PROJECT_NAME: ms-application-manager

stages:
  - update-version
  - code-quality
  - code-test
  - application-build
  - code-analysis
  - image-build
  - container-image-test
  - component-test
  - image-push
  - update-project-metadata
  - create-schedules
  - update-changelog
  - release-mr-main
  - release-tag
  - release-update-version
  - release-mr-develop
  - open-source
  - pages

include:
  - local: "/gitlab-ci/includes.yml"

required-fragment-check:
  variables:
    RULESET: MAVEN_CI

docker-build:
  extends: .docker-build-template
  before_script:
    - echo $DT_API_TOKEN | docker login -u pik94420 --password-stdin https://pik94420.live.dynatrace.com
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

create-develop-nightly-schedule:
  extends: .add-schedule
  variables:
    SCHEDULE_NAME: Nightly-Develop-CI-Build
    SCHEDULE_BRANCH: develop
    SCHEDULE_CRON: "0 0 * * 1-5"
    RANDOMIZE_MINS: "true"

.prepare-test: &prepare-test
  before_script:
    - apk add --no-cache py-pip jq
    - pip install awscli
    - eval $(aws ecr get-login --no-include-email --region eu-west-2 | sed 's|https://||')
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - export GITLAB_IMAGE="$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:${CI_COMMIT_SHA:0:8}"
    - export MOCK_IMAGE=$(aws ssm get-parameter --name "/artifact/$PRODUCT/$PIP_APPLY_MOCKS_NAME/$MOCK_IMAGE" --with-decryption --output json | jq --raw-output '.Parameter.Value')
    - echo $DT_API_TOKEN | docker login -u pik94420 --password-stdin https://pik94420.live.dynatrace.com
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

api-test:
  allow_failure: false
  extends: .docker-compose-run
  stage: component-test
  variables:
    DOCKER_COMPOSE_FILE: "docker-compose.yml"
    DOCKER_COMPOSE_COMMAND: "--attach api-test --exit-code-from api-test"
    MVN_OPTS: "-Dmaven.repo.local=~/.m2/repository"
    MVN_M2: "~/.m2"
  <<: *prepare-test
  after_script:
    - docker logout
  artifacts:
    expire_in: 1 day
    paths:
      - target/test/reports/
    when: always
    expose_as: 'API Component Test Report'
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ~/.m2/repository/

trivy-container:
  extends: .trivy-container-base
  variables:
    HIGH_SUPPRESSIONS: ""

### DEFAULT RUNNER ###
default:
  tags:
    - docker
  image: alpine@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11

pages:
  extends: .pages-11ty-template
